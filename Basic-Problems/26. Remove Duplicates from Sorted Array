So, In this problem we can use simply stl in c++ to attain the results or two pointer approach at firs by two pointer 

class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        int prev(0),curr(1);           // pointer to first and second element
        while(curr<nums.size()){
            if(nums[prev]!=nums[curr]) nums[++prev]=nums[curr];  // if prev and curr are not equal then we increament previos and current pointer
            curr++;
        }
        prev++;                                     //
        while(prev<nums.size()) nums.pop_back();
        return nums.size();
    }
};


or 

class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        nums.erase(unique(nums.begin(), nums.end()), nums.end());
        return nums.size();
    }
};
